jQuery(function () {
    handle_side_menu();
    widget_boxes()
});

function handle_side_menu() {
    $("#menu-toggler").on("click", function () {
        $("#sidebar").toggleClass("display");
        $(this).toggleClass("display");
        return false
    });
    var b = $("#sidebar").hasClass("menu-min");
    $("#sidebar-collapse").on("click", function () {
        $("#sidebar").toggleClass("menu-min");
        $(this).find('[class*="icon-"]:eq(0)').toggleClass("icon-double-angle-right");
        b = $("#sidebar").hasClass("menu-min");
        if (b) {
            $(".open > .submenu").removeClass("open")
        }
    });
    var a = "ontouchend" in document;
    $(".nav-list").on("click", function (g) {
        var f = $(g.target).closest("a");
        if (!f || f.length == 0) {
            return
        }
        if (!f.hasClass("dropdown-toggle")) {
            if (b && "click" == "tap" && f.get(0).parentNode.parentNode == this) {
                var h = f.find(".menu-text").get(0);
                if (g.target != h && !$.contains(h, g.target)) {
                    return false
                }
            }
            return
        }
        var d = f.next().get(0);
        if (!$(d).is(":visible")) {
            var c = $(d.parentNode).closest("ul");
            if (b && c.hasClass("nav-list")) {
                return
            }
            c.find("> .open > .submenu").each(function () {
                if (this != d && !$(this.parentNode).hasClass("active")) {
                    $(this).slideUp(200).parent().removeClass("open")
                }
            })
        } else {} if (b && $(d.parentNode.parentNode).hasClass("nav-list")) {
            return false
        }
        $(d).slideToggle(200).parent().toggleClass("open");
        return false
    })
}


function widget_boxes() {
    $(".page-content").delegate(".widget-toolbar > [data-action]", "click", function (k) {
        k.preventDefault();
        var j = $(this);
        var l = j.data("action");
        var a = j.closest(".widget-box");
        if (a.hasClass("ui-sortable-helper")) {
            return
        }
        if (l == "collapse") {
            var d = a.find(".widget-body");
            var i = j.find("[class*=icon-]").eq(0);
            var e = i.attr("class").match(/icon\-(.*)\-(up|down)/);
            var b = "icon-" + e[1] + "-down";
            var f = "icon-" + e[1] + "-up";
            var h = d.find(".widget-body-inner");
            if (h.length == 0) {
                d = d.wrapInner('<div class="widget-body-inner"></div>').find(":first-child").eq(0)
            } else {
                d = h.eq(0)
            }
            var c = 300;
            var g = 200;
            if (a.hasClass("collapsed")) {
                if (i) {
                    i.addClass(f).removeClass(b)
                }
                a.removeClass("collapsed");
                d.slideUp(0, function () {
                    d.slideDown(c)
                })
            } else {
                if (i) {
                    i.addClass(b).removeClass(f)
                }
                d.slideUp(g, function () {
                    a.addClass("collapsed")
                })
            }
        } else {
            if (l == "close") {
                var n = parseInt(j.data("close-speed")) || 300;
                a.hide(n, function () {
                    a.remove()
                })
            } else {
                if (l == "reload") {
                    j.blur();
                    var m = false;
                    if (a.css("position") == "static") {
                        m = true;
                        a.addClass("position-relative")
                    }
                    a.append('<div class="widget-box-layer"><i class="icon-spinner icon-spin icon-2x white"></i></div>');
                    setTimeout(function () {
                        a.find(".widget-box-layer").remove();
                        if (m) {
                            a.removeClass("position-relative")
                        }
                    }, parseInt(Math.random() * 1000 + 1000))
                } else {
                    if (l == "settings") {}
                }
            }
        }
    })
}


function getData(table,id,data,callback) {
	$.ajax({
	  type: 'POST',
	  url: _PAGE_URL + 'action/get_data',
	  data: {table: table , id : id , data : data},
	  success: callback
	});
};

function number_format(number, decimals, dec_point, thousands_sep) {
  number = (number + '').replace(/[^0-9+\-Ee.]/g, '');
  var n = !isFinite(+number) ? 0 : +number,
    prec = !isFinite(+decimals) ? 0 : Math.abs(decimals),
    sep = (typeof thousands_sep === 'undefined') ? ',' : thousands_sep,
    dec = (typeof dec_point === 'undefined') ? '.' : dec_point,
    s = '',
    toFixedFix = function (n, prec) {
      var k = Math.pow(10, prec);
      return '' + Math.round(n * k) / k;
    };
  // Fix for IE parseFloat(0.55).toFixed(0) = 0;
  s = (prec ? toFixedFix(n, prec) : '' + Math.round(n)).split('.');
  if (s[0].length > 3) {
    s[0] = s[0].replace(/\B(?=(?:\d{3})+(?!\d))/g, sep);
  }
  if ((s[1] || '').length < prec) {
    s[1] = s[1] || '';
    s[1] += new Array(prec - s[1].length + 1).join('0');
  }
  return s.join(dec);
}

// Javascript to enable link to tab
var url = document.location.toString();
if (url.match('#')) {
    $('.nav-tabs a[href=#'+url.split('#')[1]+']').tab('show') ;
} 

// Change hash for page-reload
$('.nav-tabs a').on('shown', function (e) {
    window.location.hash = e.target.hash;
})

$("#ace-settings-btn").on("click", function () {
	$(this).toggleClass("open");
	$("#ace-settings-box").toggleClass("open")
});

$("#default-theme").on("click", function () {
	if(this.checked == true) {
		document.location.href = _PAGE_URL + 'theme/default';
		$("#default-theme-dark").prop('checked', false);
		$("#default-theme-dark").prop('disabled', false);
	}
});

$("#default-theme-dark").on("click", function () {
	if(this.checked == true) {
		document.location.href = _PAGE_URL + 'theme/default_dark';
		$("#default-theme").prop('checked', false);
		$("#default-theme").prop('disabled', false);
	}
});